import os
import logging
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
from telegram import ChatAction
import yt_dlp

BOT_TOKEN = '8374166424:AAFhp0PrJFKveBYT5ycIcFAP3RHgBgYcRHg'

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def start(update, context):
    update.message.reply_text("üëã Welcome! Send me a public video link and I‚Äôll download it for you!")

def download_video(update, context):
    url = update.message.text.strip()
    update.message.reply_text("‚è≥ Downloading video... Please wait.")
    update.message.chat.send_action(ChatAction.UPLOAD_VIDEO)

    try:
        ydl_opts = {
            'format': 'best[ext=mp4][filesize<=2G]',
            'outtmpl': '%(title)s.%(ext)s',
            'noplaylist': True,
        }

        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            filename = ydl.prepare_filename(info)

        with open(filename, 'rb') as f:
            update.message.reply_video(video=f, timeout=300)

        os.remove(filename)

    except Exception as e:
        logger.error(f"Download error: {e}")
        update.message.reply_text("‚ö†Ô∏è Wrong link. Please try again with a valid one.")

def main():
    updater = Updater(BOT_TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, download_video))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
